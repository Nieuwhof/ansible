---
#ansible-builder build --build-arg EE_BASE_IMAGE='quay.io/ansible/awx-ee'
- name: Create and push container image with Ansible Builder
  hosts: localhost
  connection: local
  vars:
    acc_username: 'bnieuwhof'
    container_image: 'eetest'
    container_tags:
      - latest
      - 1.0
    execution_environment_file: execution-environment.yml
    requirements_file: requirements.txt
    collections_file: requirements.yml
    bindep_file: bindep.txt
  tasks:
    - name: Install Ansible Builder
      pip:
        name: ansible-builder
        state: present
    
    - name: Create execution-environment.ym
      copy:
        content: |
          ---
          version: 3
          images:
            base_image:
              name: quay.io/centos/centos:stream9
          dependencies:
            ansible_core:
              # Require minimum of 2.15 to get ansible-inventory --limit option
              package_pip: ansible-core>=2.15.0rc2,<2.16
            ansible_runner:
              package_pip: ansible-runner
          additional_build_steps:
            prepend: |
                RUN whoami
                RUN cat /etc/os-release
            append:
                - RUN echo This is a post-install command!
                - RUN ls -la /etc
        dest: "{{ execution_environment_file }}"         

    - name: Create requirements.yml
      copy:
        content: |
          ---
          collections:
            - community.docker
            - awx.awx
            - ansible.utils
            - community.general
            - community.digitalocean
            - amazon.aws
            - theforeman.foreman
            - google.cloud
            - openstack.cloud
            - community.vmware
            - ovirt.ovirt
            - kubernetes.core
            - ansible.posix
            - ansible.windows
            - redhatinsights.insights
            - kubevirt.core
        dest: "{{ collections_file }}"

    - name: Create requirements.txt
      copy:
        content: |
          # List your Python dependencies here
          # For example:
          #  requests
              paramiko
              git+https://github.com/ansible/ansible-sign
              ncclient
              pykerberos
              pyOpenSSL
              pypsrp[kerberos,credssp]
              pywinrm[kerberos,credssp]
              toml
              pexpect>=4.5
              python-daemon
              pyyaml
              six
              receptorctl
        dest: "{{ requirements_file }}"

    - name: Create bindep.txt
      copy:
        content: |
          # List your system dependencies here
          # For example:
          # python3-devel
          # libffi-devel
          #  findutils
          #  net-tools
          #  curl
          #  gcc
          #  git
          #  libffi-dev
          #  libpython3-dev
          #  libssl-dev
          #  lsb-release
          #  make
          #  python3-full
          #  wget
          #  ansible

          # Base requirements for Ubuntu
            git-core          [platform:dpkg]
            libssl-dev        [platform:dpkg]
            libffi-dev        [platform:dpkg]
            python3           [platform:dpkg]
            python3-apt       [platform:dpkg]
            python3-dev       [platform:dpkg]

          # Base requirements for RPM distros
            gcc-c++           [platform:rpm]
            openssh-server    [platform:dnf]
            git               [platform:rpm]
            iputils           [platform:dnf]
            libffi-devel      [platform:rpm]
            openssl-devel     [platform:rpm]
            python3-devel     [platform:rpm]
            net-tools         [platform:rpm]
            git-core          [platform:rpm]
            python3.9-devel   [platform:rpm compile]
            libcurl-devel     [platform:rpm compile]
            krb5-devel        [platform:rpm compile]
            krb5-workstation  [platform:rpm]
            subversion        [platform:rpm]
            subversion        [platform:dpkg]
            git-lfs           [platform:rpm]
            sshpass           [platform:rpm]
            rsync             [platform:rpm]
            epel-release      [platform:rpm]
            python-unversioned-command [platform:rpm]
            unzip             [platform:rpm]
            podman-remote     [platform:rpm]
            cmake             [platform:rpm compile]
            gcc               [platform:rpm compile]
            gcc-c++           [platform:rpm compile]
            make              [platform:rpm compile]
            openssl-devel     [platform:rpm compile]
        dest: "{{ bindep_file }}"

    - name: Log into container registry
      community.docker.docker_login:
        username: "{{ acc_username }}"
        password: "NY8"

    - name: Build container image with Ansible Builder
      command: ansible-builder build -v3 -t "{{ container_image }}"
      args:
        chdir: "{{ playbook_dir }}"
      register: build_output

    - name: Build image with Ansible Builder
      command: ansible-builder build -v3 -t "{{ container_image }}"

    - name: Tag final
      command: docker tag "{{ container_image }}" "{{ acc_username }}/{{ container_image }}:{{ item }}"
      loop: "{{ container_tags }}"

    - name: Push container image to container registry
      command: docker push "{{ acc_username }}/{{ container_image }}:{{ item }}"
      loop: "{{ container_tags }}"
      
