---
- name: Create a /cloud directory if it does not exist
  ansible.builtin.file:
    path: /cloud
    state: directory
    mode: 1755

- name: Clone a ansible script github repository
  git:
    repo: https://github.com/Nieuwhof/ansible.git
    dest: /cloud/ansible/
    clone: yes
    update: yes

- name: Clone a multipass scripts github repository
  git:
    repo: https://github.com/Nieuwhof/multipass.git
    dest: /cloud/multipass/
    clone: yes
    update: yes

- name: Update Upgrade
  apt:
    name: "*"
    state: latest

- name: Set a hostname
  ansible.builtin.hostname:
    name: wallace

- name: Install sudo
  apt:
     name: sudo
     state: present

- name: Allow 'sudo' group to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%sudo'
    line: '%sudo ALL=(ALL:ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'


- name: Add sudoers users to sudo group
  user:
    name="{{ item }}"
    groups=sudo
    append=yes
    state=present
    createhome=yes
  with_items:
        - ops

#- name: Set up authorized keys for the root user
#  authorized_key: 
#       user: root
#       state: present
#       key: "{{ lookup('file', item) }}"  
#  with_fileglob:
#     - /cloud/ansible/pubkey/RKey/id_rsa.pub
#     - /cloud/ansible/pubkey/RKey/id_rsa

#- name: copy RKey to /root/.ssh/
#  copy:
#      src: /cloud/ansible/pubkey/RKey/
#      dest: /root/.ssh

#- name: Set up authorized keys for the ubuntu user
#  authorized_key: 
#       user: ops         
#       state: present
#       key: "{{ lookup('file', item) }}"
#  with_fileglob:
#     - /cloud/ansible/pubkey/Opskey/id_rsa.pub
#     - /cloud/ansible/pubkey/Opskey/id_rsa

- name: copy Opskey to /home/ops/.ssh/
  copy:
      src: /cloud/ansible/pubkey/Opskey/
      dest: /home/ops/.ssh
      remote_src: true
  become: true

- name: copy Rkey to /root/.ssh/
  copy:
      src: /cloud/ansible/pubkey/Opskey/
      dest: /root/.ssh
      remote_src: true
  become: true  

- name: Generate /etc/hosts file
  template:
    src=hosts.j2
    dest=/etc/hosts

- name: Create a /home/ops/cloud directory if it does not exist
  ansible.builtin.file:
    path: /home/ops/cloud
    state: directory
    mode: 1755

- name: copy multipass to /home/ops/cloud
  copy:
      src: /cloud/multipass/
      dest: /home/ops/cloud
      mode: 0755
      remote_src: true
  become: true 

#- name: Execute cloud
#  shell: chmod +x /home/ops/cloud/*

- name: 'Make executable cloud directory'
  ansible.builtin.file:
   mode: '+x'
   path: '/home/ops/cloud'
   state: 'directory'
   recurse: yes

- name: install packages
  apt:
      state: present
      name:
       - python3
       - pip
       - htop
       - nano
       - snapd
                 
- name: Install "multipass"
  snap:
    name: multipass
    classic: yes

#
- name: Install apt-transport-https
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - lsb-release
      - gnupg
    state: latest
    update_cache: true

- name: Add signing key
  ansible.builtin.apt_key:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    state: present

- name: Add repository into sources list
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
    filename: docker

- name: Install Docker
  ansible.builtin.apt:
    name:
      - docker
      - docker.io
      - docker-compose
      - docker-registry
    state: latest
    update_cache: true

#
- name: Install Docker compose
  apt:
    name: docker-compose
    state: present
 
- name: Remove Docker compose
  apt:
    name: docker-compose
    state: absent
 
- name: Create portainer container
  docker_container:
    name: portainer
    image: portainer/portainer-ce
    state: started
    recreate: yes
    restart_policy: always
    published_ports:
      - "8000:8000"
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
  