---
- hosts: all
  become: true
  become_user: root

  tasks:

  - name: Install sudo test
    apt:
      name: sudo
      state: present
    when: ansible_os_family == 'Debian'
    
  - name: Install sudo Redhat
    yum:
      name: sudo
      state: present
    when: ansible_os_family in ['RedHat', 'Rocky']
    
  - name: Allow 'sudo' group to have passwordless sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%sudo'
      line: '%sudo ALL=(ALL:ALL) NOPASSWD: ALL'
      validate: 'visudo -cf %s'
    when: ansible_os_family == 'Debian'
     
  - name: Allow 'sudo' group to have passwordless wheel
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%wheel'
      line: '%wheel ALL=(ALL:ALL) NOPASSWD: ALL'
      validate: 'visudo -cf %s'
    when: ansible_os_family in ['RedHat', 'Rocky']

  - name: Add sudoers users to sudo group
    user:
      name=ops
      groups=sudo
      append=yes
      state=present
      shell=/bin/bash
      update_password=always
      createhome=yes
      password={{ set_pass }}
      generate_ssh_key=yes
      ssh_key_bits=2048
      ssh_key_file=.ssh/id_rsa      
    when: ansible_os_family == 'Debian' 

  - name: Add sudoers users to wheel group
    user:
      name=ops
      groups=wheel
      append=yes
      state=present
      shell=/bin/bash
      update_password=always
      createhome=yes
      password={{ set_pass }}
      generate_ssh_key=yes
      ssh_key_bits=2048
      ssh_key_file=.ssh/id_rsa
    when: ansible_os_family in ['RedHat', 'Rocky']
        
  - name: Download .ssh/id_rsa
    ansible.builtin.get_url:
      url: https://raw.githubusercontent.com/Nieuwhof/ansible/main/pubkey/Opskey/id_rsa
      dest: /home/ops/.ssh/ops_id_rsa
      owner: ops
      group: ops
      mode: '0600'      

  - name: Download .ssh/id_rsa.pub
    ansible.builtin.get_url:
      url: https://raw.githubusercontent.com/Nieuwhof/ansible/main/pubkey/Opskey/id_rsa.pub
      dest: /home/ops/.ssh/ops_id_rsa.pub
      owner: ops
      group: ops
      mode: '0644'      

  - name: Set authorized keys
    ansible.posix.authorized_key:
      user: ops
      state: present
      manage_dir: yes
      key: "{{set_sshkey}}"

  - name: Download .ssh/id_rsa
    ansible.builtin.get_url:
      url: https://raw.githubusercontent.com/Nieuwhof/ansible/main/pubkey/Opskey/id_rsa
      dest: /root/.ssh/ops_id_rsa
      owner: root
      group: root
      mode: '0600'      
    become: true
     
  - name: Download .ssh/id_rsa.pub
    ansible.builtin.get_url:
      url: https://raw.githubusercontent.com/Nieuwhof/ansible/main/pubkey/Opskey/id_rsa.pub
      dest: /root/.ssh/ops_id_rsa.pub
      owner: root
      group: root
      mode: '0644'      
    become: true
     
  - name: Set authorized keys
    ansible.posix.authorized_key:
      user: root
      state: present
      manage_dir: yes
      key: "{{set_sshkey}}"
    become: true
     
  - name: Set a hostname
    ansible.builtin.hostname:
      name: '{{set_hostname}}'

  - name: copy to "resolv.conf.bak"
    shell: cp /etc/resolv.conf /etc/resolv.conf.bak
  - name: remove link "resolv.conf  
    shell: rm /etc/resolv.conf
  - name: copt to "resolv.conf"
    shell: cp /etc/resolv.conf.bak /etc/resolv.conf
  
  - name: Allow 'search {{set_fqdn}} fqdn'
    ansible.builtin.replace:
      path: /etc/resolv.conf
      regexp: '^search'
      replace: 'search {{ set_fqdn }}'

  - name: Allow PermitRootLogin yes 
    lineinfile:
      dest: /etc/ssh/sshd_config
      state: present
      regexp: '^#PermitRootLogin yes'
      line: 'PermitRootLogin yes'

  - name: PasswordAuthentication yes 
    lineinfile:
      dest: /etc/ssh/sshd_config
      state: present
      regexp: '^#PasswordAuthentication yes'
      line: 'PasswordAuthentication yes'

  - name: PasswordAuthentication no
    lineinfile:
      dest: /etc/ssh/sshd_config
      state: present
      regexp: '^PasswordAuthentication no'
      line: 'PasswordAuthentication yes'

  - name: Password Set Root
   # shell: echo -e '{{set_pass}}\n{{set_pass}}' | passwd root
    shell: echo root:"{{set_pass}}" | chpasswd

  - name: Password Set Ops
  # shell: echo -e "{{set_pass}}\n{{set_pass}}" | passwd ops
    shell: echo ops:"{{set_pass}}" | chpasswd
      
  - name: install packages Debian
    apt:
        state: present
        name:
        - python3
        - pip
        - htop
        - nano
        - golang-go
    when: ansible_os_family == 'Debian'       

  - name: install packages Redhat
    yum:
        state: present
        name:
        - python3
        - pip
        - nano
        - golang
    when: ansible_os_family in ['RedHat', 'Rocky']       

  - name: Reboot a machine
    reboot:
